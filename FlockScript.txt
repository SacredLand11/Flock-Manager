// The script must be integrated to a prefab.
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Flock : MonoBehaviour
{
    public FlockManager myManager;
    float speed;

    private void Start()
    {
        speed = Random.Range(myManager.minSpeed, myManager.maxSpeed); //Object speed is described randomly.
    }
    private void Update()
    {
        ApplyRules();
        transform.Translate(0, 0, speed * Time.deltaTime);
    }
    void ApplyRules()
    {
        GameObject[] obj;
        obj = myManager.allObjects;

        Vector3 vcenter = Vector3.zero;
        Vector3 vavoid = Vector3.zero;
        float gSpeed = 0.01f;
        float nDistance;
        int groupSize = 0;

        foreach (var ob in obj)
        {
            if(ob != this.gameObject)
            {
                nDistance = Vector3.Distance(ob.transform.position, this.transform.position);
                if(nDistance <= myManager.neighbourDistance)
                {
                    vcenter += ob.transform.position;
                    groupSize++;

                    if (nDistance < 1.0f)
                    {
                        vavoid = vavoid + (this.transform.position - ob.transform.position);
                    }

                    Flock anotherFlock = ob.GetComponent<Flock>();
                    gSpeed = gSpeed + anotherFlock.speed;
                }
            }
        }

        if(groupSize > 0)
        {
            vcenter = vcenter / groupSize;
            speed = gSpeed / groupSize;

            Vector3 direction = (vcenter + vavoid) - transform.position;
            if(direction != Vector3.zero)
            {
                transform.rotation = Quaternion.Slerp(transform.rotation,
                                                        Quaternion.LookRotation(direction),
                                                        myManager.rotationSpeed * Time.deltaTime);
            }
        }
    }
}
